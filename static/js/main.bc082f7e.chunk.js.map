{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","useEffect","fetch","then","res","json","data","console","log","results","type","placeholder","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAyBeA,EArBD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,SAChCC,EADU,EACVA,aADU,OAEL,qBAAKC,UAAU,QAAf,SACI,sBAAKA,UAAU,gBAAf,UACE,qBAAKC,IANJ,mCAMmBJ,EAAaK,IAAKN,IAExC,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,+BAAOG,OAGX,qBAAKC,UAAU,wBAAf,SAEI,4BAAIF,YCwBNK,MA7Bf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,KAYb,OAVAC,qBAAU,WACRC,MAVF,gHAWGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZN,EAAUM,EAAKG,cAGhB,IAGD,qCACE,iCACE,uBAAOf,UAAU,SAASgB,KAAK,OAAOC,YAAY,oBAEpD,qBAAKjB,UAAU,kBAAf,SAEEK,EAAOa,OAAS,GAAKb,EAAOc,KAAI,SAAAC,GAAK,OACnC,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCpBbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc082f7e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst Movie = ({title, poster_path, overview, \r\n    vote_average}) =>(\r\n         <div className=\"movie\">\r\n             <div className=\"movie-content\">\r\n               <img src={IMG_API + poster_path} alt={title}/>\r\n             \r\n             <div className=\"movie-info\">\r\n                 <h3>{title}</h3>\r\n                 <span>{vote_average}</span>\r\n             </div>\r\n\r\n             <div className=\"movie-over image-blur\">\r\n               \r\n                 <p>{overview}</p>\r\n             </div>\r\n             </div>\r\n    </div>\r\n    );\r\n\r\n \r\n\r\nexport default Movie\r\n ","import React ,{useEffect, useState} from 'react'\n\nimport Movie from './components/Movie';\n\nconst FEATURED_API =\n  \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=7ecd0b11bc4cd387a22b43cb37086584\";\n  \n  const IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n  \n  const SEARCH_API =\n  \"https://api.themoviedb.org/3/search/movie?&api_key=7ecd0b11bc4cd387a22b43cb37086584&query=\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  useEffect(()=>{\n    fetch(FEATURED_API)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data);\n      setMovies(data.results);\n    });\n  \n  }, []);\n \n  return (\n    <>\n      <header>\n        <input className=\"search\" type=\"text\" placeholder=\"movie name...\"/>\n      </header>\n      <div className=\"movie-container\">\n      {\n        movies.length > 0 && movies.map(movie => (\n          <Movie key={movie.id} {...movie} />\n        ))\n      }\n      \n    </div>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}